def word_v(word): #สร้างฟังก์ชันชื่อว่า word_value ที่รับ คำหนึ่งคำ เข้ามา (เรียกว่า word)
    total = 0 #สร้างกล่องชื่อ total เพื่อเก็บค่ารวมของตัวอักษรทั้งหมดในคำนั้น เริ่มต้นเป็นศูนย์
    for ch in word: #วนลูปดูทุกตัวอักษรในคำนั้น ตัวละตัว แล้วเรียกตัวอักษรนั้นว่า ch (เช่นถ้า word = "abc" ก็จะวนดู 'a', 'b', 'c')
        ch = ch.lower() # ให้เป็นตัวพิมพ์เล็กก่อน
        num =ord(ch) - 96 # แปลงตัวอักษรเป็นตัวเลข
        total = total + num #นำค่าที่ได้จากตัวอักษรนี้ (num) ไปบวกเพิ่มเข้าไปใน total
    return total #ส่งค่ารวมทั้งหมดกลับไป เช่นถ้า word = "abc" → จะได้ 1+2+3 = 6

'''
       num = ord(ch) - 96
แปลว่า:
แปลงตัวอักษร ch ให้เป็นตัวเลข
โดยใช้ ord(ch) จะได้เลขตาม ASCII เช่น

ord('a') = 97 → เราลบ 96 จะได้ 1

ord('b') = 98 → ลบ 96 จะได้ 2
 จนถึง

ord('z') = 122 → ลบ 96 จะได้ 26'''

txt = input().strip() #.strip cut space head and tail 
words = txt.split() #.split = if input have space in btw, separate it
print(words)

max_s = 0
best_word = [ ]

for char in words: #เราจะวนดูทุกคำในประโยค (เช่น "hello world" → จะวนดู "hello" แล้ว "world")
    sc = word_v(char) #หาคะแนนของคำนี้ (ใช้ฟังก์ชัน word_value() ที่เราเขียนไว้)
                                 # word = "hello" → ได้ score = 52
    if sc > max_s: #ถ้าคะแนนของคำนี้ มากกว่า คำที่ดีที่สุดก่อนหน้า
        max_s = sc #อัปเดตค่าใหม่เลยว่า: คะแนนนี้คือคะแนนสูงสุดใหม่แล้ว!
        best_word = [char] #คำนี้คือคำที่ดีที่สุดตอนนี้ (ใส่ในลิสต์ best_words)
    elif sc == max_s: #ถ้าคำนี้คะแนน เท่ากับ คำที่ดีที่สุดก่อนหน้า
        best_word.append(char) #เอาคำนี้ไปต่อท้ายลิสต์ เพราะคะแนนเท่ากัน อาจจะต้องตัดสินกันด้วยลำดับ a-z ทีหลัง

print(sorted(best_word) [0]) #เรียงลำดับ best_words จาก a → z แล้วเลือกคำแรก (เพื่อกรณีที่มีหลายคำที่คะแนนเท่ากัน)

